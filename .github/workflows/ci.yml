name: CI GoLendar

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout du code
        uses: actions/checkout@v4

      - name: Installation de Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.3'

      - name: Définir GOPATH
        run: echo "GOPATH=$(go env GOPATH)" >> $GITHUB_ENV

      - name: Installation des dépendances
        run: go mod download

      - name: Lint (go vet)
        run: go vet ./...

      - name: Lint avancé (staticcheck)
        run: |
          go install honnef.co/go/tools/cmd/staticcheck@latest
          staticcheck ./...

      - name: Rendre le script build exécutable
        run: chmod +x scripts/build.sh

      - name: Build & déploiement Docker (stack complète)
        run: ./scripts/build.sh
      
      - name: Run tests with coverage
        run: |
          export DB_HOST=localhost
          export DB_PORT=3306
          export DB_USER=root
          export DB_PASSWORD=password
          export DB_NAME=calendar
          touch reports/coverage.out
          go test -p=1 -coverprofile=reports/coverage.out -v ./...
          go test -p=1 ./... -json > reports/test-report.json
  
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 

      - name: Upload des logs de test (si échec)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: logs-test
          path: reports/test-report.json
          if-no-files-found: ignore 