name: CI GoLendar

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout du code
        uses: actions/checkout@v4

      - name: Installation de Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.3'

      - name: Cache des modules Go
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Installation des dépendances
        run: go mod download

      - name: Lint (go vet)
        run: go vet ./...

      - name: Lint avancé (staticcheck)
        run: |
          go install honnef.co/go/tools/cmd/staticcheck@latest
          staticcheck ./...

      - name: Build local
        run: go build ./...

      - name: Tests unitaires (sans base de données)
        run: go test -v ./internal/common ./internal/middleware ./internal/routes

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        run: docker build -t golendar:test .

      - name: Start MySQL container
        run: |
          docker run -d \
            --name test-mysql \
            -e MYSQL_DATABASE=calendar \
            -e MYSQL_PASSWORD=password \
            -e MYSQL_ROOT_PASSWORD=password \
            -p 3306:3306 \
            mysql:8.0 --default-authentication-plugin=mysql_native_password

      - name: Wait for MySQL to be ready
        run: |
          until docker exec test-mysql mysqladmin ping -h localhost --silent; do
            echo "MySQL démarre encore..."
            sleep 5
          done
          echo "MySQL est prêt !"

      - name: Import database schema
        run: docker exec -i test-mysql mysql -u root -ppassword calendar < resources/schema.sql

      - name: Run integration tests
        run: |
          export DB_HOST=localhost
          export DB_PORT=3306
          export DB_USER=root
          export DB_PASSWORD=password
          export DB_NAME=calendar
          go test -v ./internal/user ./internal/calendar ./internal/calendar_event ./internal/user_calendar

      - name: Cleanup containers
        if: always()
        run: |
          docker stop test-mysql || true
          docker rm test-mysql || true

      - name: Upload des logs de test (si échec)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: logs-test
          path: logs/app.log
          if-no-files-found: ignore 